/**
 * Scanner
 * v1.0.0
 * by Sarah Burnett
 */

"use strict";class t{constructor(t){this.scanner=t,this.element=this.getOption("messageElement")??this.create()}getOption(t){return this.scanner.getOption(t)}create(){const t=document.createElement("div");return t.className="message",this.scanner.append(t),t}update(t,e=null){this.hide(),this.message=document.createElement("div"),this.message.className=this.getClassname(t),this.message.innerHTML=e||this.getMessage(t),this.element.append(this.message),this.display()}display(){this.message.style.display="block"}hide(){this.message.style.display="none",this.element.innerHTML=""}getClassname(t){return t.toLowerCase()}getMessage(t){switch(t){case"SUCCESS":return this.getOption("successHTML");case"ERROR":return this.getOption("errorHTML");case"FAILED":return this.getOption("failedHTML")}}}class e{constructor(t){this.scan=t,this.type=t.state,this.result=t.result,this.error=t.error,this.options=t.options,this.message=t.message}getOption(t){return this.scan.getOption(t)}handle(){switch(this.message.update(this.type),this.type){case"SUCCESS":this.handleSuccess(this.result);break;case"FAILED":this.handleFailure(this.error);break;case"ERROR":this.handleError(this.error)}}handleSuccess(t){this.getOption("handleSuccess")(t),this.scan.scanner.stop()}handleFailure(t){this.getOption("handleFailure")(t)}handleError(t){this.getOption("handleError")(t),this.scan.scanner.stop()}}class s{scannedImages=[];constructor(t,e){this.scanner=e,this.performScan=this.getOption("performScan")}getOption(t){return this.scanner.getOption(t)}setState(t){this.state=t}setResult(t){this.result=t}setError(t){this.error=t}prepare(){return this.stream=this.scanner.stream,this.stream.draw(),this.stream.blob((t=>this.addImage(t))),this.getLastImage()}async perform(t){this.message=this.scanner.message,await this.performScan(t);new e(this).handle()}addImage(t){this.scannedImages.push(t)}getLastImage(){return this.scannedImages.pop()}}class i{constructor(t){this.scanner=t,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.video=document.createElement("video"),this.video.autoplay=!0,this.video.muted=!0,this.video.playsInline=!0}getOption(t){return this.scanner.getOption(t)}async start(){const t=await navigator.mediaDevices.getUserMedia({video:{facingMode:this.getOption("videoFacingMode")}});this.video.srcObject=await t,await this.video.play()}async stop(){this.video.pause(),this.video.srcObject.getTracks().forEach((t=>t.stop())),this.video.srcObject=null}ready(){return this.video.readyState===this.video.HAVE_ENOUGH_DATA}draw(){this.canvas.height=this.video.videoHeight,this.canvas.width=this.video.videoWidth,this.ctx.drawImage(this.video,0,0,this.canvas.width,this.canvas.height),this.getOption("displayVideo")&&0==this.canvas.style.opacity&&(this.canvas.style.opacity=1)}blob(t){this.canvas.toBlob(t)}data(){return this.canvas.getImageData(0,0,this.canvas.width,this.canvas.height)}line(t,e){this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(e.x,e.y),this.ctx.lineWidth=4,this.ctx.strokeStyle=this.getOption("primaryColor"),this.ctx.stroke()}hide(){this.canvas.style.opacity="0"}}class n{parentElement;position;performScan;classname="scanner";iconHTML='<i class="fa fa-search"></i>';backButtonHTML="Go Back";videoFacingMode="environment";messageElement;displayVideo=!0;errorHTML="Scanning Error";successHTML="Scanning Success";failedHTML="Scanning Failed";cancelledHTML="Scanning Cancelled";async handleSuccess(){}async handleFailure(){}async handleError(){}primaryColor="#03a803"}module.exports=class{options=new n;constructor(t){if(!t)throw new Error("Need to provide options object to create scanner");if(!t.hasOwnProperty("parentElement"))throw new Error("Need parent element to append created scanner");if(!t.hasOwnProperty("position"))throw new Error("Need starting position for scanner");if(!t.hasOwnProperty("performScan"))throw new Error("Need method for performing scan");this.setOptions(t)}setState(t){this.state=t}setOptions(t){for(let e in t)this.options[e]=t[e]}getOption(t){return this.options[t]}create(){this.scanner=document.createElement("div");const{top:e,left:n,width:a,height:r}=this.getOption("position");this.scanner.classList.add(this.getOption("classname")),this.scanner.style.position="fixed",this.scanner.style.top=e+"px",this.scanner.style.left=n+"px",this.scanner.style.width=a+"px",this.scanner.style.height=r+"px",this.icon=document.createElement("p"),this.icon.className="icon",this.icon.style.fontSize="2rem",this.icon.innerHTML=this.getOption("iconHTML"),this.backBtn=document.createElement("button"),this.backBtn.type="button",this.backBtn.id="backBtn",this.backBtn.innerHTML=this.getOption("backBtnHTML"),this.backBtn.addEventListener("click",(async()=>this.cancel())),this.message=new t(this),this.stream=new i(this),this.scan=new s(this),this.scanner.appendChild(this.stream.canvas),this.scanner.appendChild(this.stream.video),this.scanner.appendChild(this.icon),this.scanner.appendChild(this.backBtn);this.getOption("parentElement").appendChild(this.scanner),this.setState("AVAILABLE")}async start(){this.scanner&&"REMOVED"!==this.state||this.create();try{await this.animateIn(),await this.stream.start(),this.setState("SCANNING"),await this.requestFrameScan()}catch(t){await this.error("Unable to start scanning")}}async stop(){this.isScanning()&&(this.setState("STOPPING"),await this.stream.stop()),await this.animateOut(),this.scanner.remove(),this.setState("REMOVED")}async requestFrameScan(){return await this.requestAnimation(this.scanFrame.bind(this),20)}async scanFrame(){if(this.isScanning()){if(this.stream.ready()){const t=this.scan.prepare();await this.scan.perform(t)}await this.requestFrameScan()}}async cancel(){await this.stop(),this.message.update("CANCEL")}async error(t){await this.stop(),this.message.update("ERROR",t)}isScanning(){return"SCANNING"===this.state}async animateIn(){const t="350",e=()=>{this.scanner.style.transition="\n                width 350ms ease-in-out,\n                height 350ms ease-in-out,\n                left 350ms ease-in-out,\n                top 350ms ease-in-out\n            ",this.scanner.style.zIndex="1000",this.scanner.style.opacity="1",this.scanner.style.top=0,this.scanner.style.left=0,this.scanner.style.width="100vw",this.scanner.style.height="100vh",this.icon.style.fontSize="50vh"};return new Promise((async s=>{await this.requestAnimation(e,t),this.backBtn.style.opacity="1",s()}))}async animateOut(){const t="350",e=this.getOption("position"),s=()=>{this.backBtn.style.opacity="0",this.stream.hide(),this.scanner.style.transition="\n                width 350ms ease-in-out,\n                height 350ms ease-in-out,\n                left 350ms ease-in-out,\n                top 350ms ease-in-out\n            ",this.scanner.style.top=e.top+"px",this.scanner.style.left=e.left+"px",this.scanner.style.width=e.width+"px",this.scanner.style.height=e.height+"px",this.icon.style.fontSize="2rem"};return new Promise((async e=>{await this.requestAnimation(s,t),e()}))}requestAnimation(t,e){return new Promise((s=>{requestAnimationFrame(t),setTimeout(s,e)}))}};
