/**
 * Scanner
 * v1.0.0
 * by Sarah Burnett
 */

"use strict";module.exports=class{isScanning=!1;constructor(t){if(!t)throw new Error("Need to provide options object to create scanner");if(!t.hasOwnProperty("container"))throw new Error("Need container to append created scanner");if(!t.hasOwnProperty("position"))throw new Error("Need starting position for scanner");this.container=t.container,this.position=t.position,this.backBtnHTML=t.backBtnHTML??"Go Back",this.iconHTML=t.iconHTML??"",this.videoFacingMode=t.videoFacingMode??"environment",this.classname=t.classname??"scanner",this.scanFrequency=t.scanFrequency??20,t.hasOwnProperty("scanImage")&&(this.scanImage=t.scanImage),t.hasOwnProperty("displaySuccess")&&(this.displaySuccess=t.displaySuccess),t.hasOwnProperty("displayError")&&(this.displayError=t.displayError)}create(){this.scanner=document.createElement("div");const{top:t,left:s,width:e,height:i}=this.position;this.scanner.classList.add(this.classname),this.scanner.style.position="fixed",this.scanner.style.top=t+"px",this.scanner.style.left=s+"px",this.scanner.style.width=e+"px",this.scanner.style.height=i+"px",this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.video=document.createElement("video"),this.video.autoplay=!0,this.video.muted=!0,this.video.playsInline=!0,this.icon=document.createElement("p"),this.icon.className="icon",this.icon.style.fontSize="2rem",this.icon.innerHTML=this.iconHTML,this.backBtn=document.createElement("button"),this.backBtn.type="button",this.backBtn.id="backBtn",this.backBtn.innerHTML=this.backBtnHTML,this.backBtn.addEventListener("click",(async()=>this.stop())),this.scanner.appendChild(this.canvas),this.scanner.appendChild(this.video),this.scanner.appendChild(this.icon),this.scanner.appendChild(this.backBtn),document.querySelector(this.container).appendChild(this.scanner)}async start(){this.scanner||this.create();try{await this.animateIn();const t=await navigator.mediaDevices.getUserMedia({video:{facingMode:this.videoFacingMode}});this.video.srcObject=await t,this.video.play(),this.isScanning=!0,await this.requestScan(),this.startTime=Date.now()}catch(t){throw t}}async stop(){this.isScanning&&(this.video.pause(),this.video.srcObject.getTracks().forEach((t=>t.stop())),this.video.srcObject=null,this.isScanning=!1),await this.animateOut(),this.scanner.remove()}async scan(){this.isScanning&&(this.video.readyState===this.video.HAVE_ENOUGH_DATA&&(this.drawCanvas(),await this.scanImage()),await this.requestScan())}async scanImage(){throw new Error("Method must be implemented")}async displaySuccess(t){throw new Error("Method must be implemented")}async displayError(t){throw new Error("Method must be implemented")}drawCanvas(){this.canvas.height=this.video.videoHeight,this.canvas.width=this.video.videoWidth,this.ctx.drawImage(this.video,0,0,this.canvas.width,this.canvas.height),0==this.canvas.style.opacity&&(this.canvas.style.opacity=1)}async requestScan(){return await this.requestAnimation(this.scan.bind(this),this.scanFrequency)}async animateIn(){const t="350",s=()=>{this.scanner.style.transition="\n                width 350ms ease-in-out,\n                height 350ms ease-in-out,\n                left 350ms ease-in-out,\n                top 350ms ease-in-out\n            ",this.scanner.style.zIndex="1000",this.scanner.style.opacity="1",this.scanner.style.top=0,this.scanner.style.left=0,this.scanner.style.width="100vw",this.scanner.style.height="100vh",this.icon.style.fontSize="50vh"};return new Promise((async e=>{await this.requestAnimation(s,t),this.backBtn.style.opacity="1",e()}))}async animateOut(){const t="350",s=()=>{this.backBtn.style.opacity="0",this.canvas.style.opacity="0",this.scanner.style.transition="\n                width 350ms ease-in-out,\n                height 350ms ease-in-out,\n                left 350ms ease-in-out,\n                top 350ms ease-in-out\n            ",this.scanner.style.top=this.position.top+"px",this.scanner.style.left=this.position.left+"px",this.scanner.style.width=this.position.width+"px",this.scanner.style.height=this.position.height+"px",this.icon.style.fontSize="2rem"};return new Promise((async e=>{await this.requestAnimation(s,t),e()}))}requestAnimation(t,s){return new Promise((e=>{requestAnimationFrame(t),setTimeout(e,s)}))}};
